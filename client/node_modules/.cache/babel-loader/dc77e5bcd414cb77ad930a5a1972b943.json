{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Santhosh CV\\\\Downloads\\\\BookingApp\\\\client\\\\src\\\\components\\\\reserve\\\\Reserve.jsx\",\n    _s = $RefreshSig$();\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport \"./reserve.css\";\nimport { faCircleXmark } from \"@fortawesome/free-solid-svg-icons\";\nimport useFetch from \"../../hooks/useFetch\";\nimport { useContext, useState } from \"react\";\nimport { SearchContext } from \"../../context/SearchContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Reserve = _ref => {\n  _s();\n\n  let {\n    setOpen,\n    hotelId\n  } = _ref;\n  const [selectedRooms, setSelectedRooms] = useState([]);\n  const {\n    data,\n    loading,\n    error\n  } = useFetch(`room/${hotelId}`);\n  const {\n    dates\n  } = useContext(SearchContext);\n\n  const getDatesInRange = (startDate, endDate) => {\n    const start = new Date(startDate);\n    const end = new Date(endDate);\n    const date = new Date(start.getTime());\n    let list = [];\n\n    while (date <= end) {\n      list.push(new Date(date).getTime());\n      date.setDate(date.getDate() + 1);\n    }\n\n    return list;\n  };\n\n  const alldates = getDatesInRange(dates[0].startDate, dates[0].endDate);\n\n  const isAvailable = roomNumber => {\n    const isFound = roomNumber.unavailableDates.some(date => alldates.includes(new Date(date).getTime()));\n    return !isFound;\n  };\n\n  const handleSelect = e => {\n    const checked = e.target.checked;\n    const value = e.target.value;\n    setSelectedRooms(checked ? [...selectedRooms, value] : selectedRooms.filter(item => item !== value));\n  };\n\n  const handleClick = async () => {};\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"reserve\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rContainer\",\n      children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faCircleXmark,\n        className: \"rClose\",\n        onClick: () => setOpen(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Select your Rooms:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), data.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rItem\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"rItemInfo\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"rTitle\",\n            children: item.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"rDesc\",\n            children: item.desc\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"rMax\",\n            children: [\"Max People: \", /*#__PURE__*/_jsxDEV(\"b\", {\n              children: item.maxPeople\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 63\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"rPrice\",\n            children: item.price\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"rSelectRooms\",\n          children: item.roomNumbers.map(roomNumber => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"room\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: roomNumber.number\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              value: roomNumber._id,\n              onChange: handleSelect,\n              disabled: !isAvailable(roomNumber)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleClick,\n        className: \"rButton\",\n        children: \"Reserve Now!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Reserve, \"sgGmFRi2+y9gipjvFpOK0FbzQf8=\", false, function () {\n  return [useFetch];\n});\n\n_c = Reserve;\nexport default Reserve;\n\nvar _c;\n\n$RefreshReg$(_c, \"Reserve\");","map":{"version":3,"sources":["C:/Users/Santhosh CV/Downloads/BookingApp/client/src/components/reserve/Reserve.jsx"],"names":["FontAwesomeIcon","faCircleXmark","useFetch","useContext","useState","SearchContext","Reserve","setOpen","hotelId","selectedRooms","setSelectedRooms","data","loading","error","dates","getDatesInRange","startDate","endDate","start","Date","end","date","getTime","list","push","setDate","getDate","alldates","isAvailable","roomNumber","isFound","unavailableDates","some","includes","handleSelect","e","checked","target","value","filter","item","handleClick","map","title","desc","maxPeople","price","roomNumbers","number","_id"],"mappings":"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","sourcesContent":["import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport \"./reserve.css\"\r\nimport { faCircleXmark } from \"@fortawesome/free-solid-svg-icons\"\r\nimport useFetch from \"../../hooks/useFetch\"\r\nimport { useContext, useState } from \"react\"\r\nimport { SearchContext } from \"../../context/SearchContext\"\r\n\r\nconst Reserve = ({ setOpen, hotelId }) => {\r\n    const [selectedRooms, setSelectedRooms] = useState([])\r\n    const { data, loading, error } = useFetch(`room/${hotelId}`)\r\n    const { dates } = useContext(SearchContext);\r\n\r\n    const getDatesInRange = (startDate, endDate) => {\r\n        const start = new Date(startDate)\r\n        const end = new Date(endDate)\r\n        const date = new Date(start.getTime());\r\n\r\n        let list = []\r\n\r\n        while (date <= end) {\r\n            list.push(new Date(date).getTime())\r\n            date.setDate(date.getDate() + 1)\r\n        }\r\n\r\n        return list\r\n    };\r\n\r\n    const alldates = getDatesInRange(dates[0].startDate, dates[0].endDate)\r\n\r\n    const isAvailable = (roomNumber) => {\r\n        const isFound = roomNumber.unavailableDates.some(date =>\r\n            alldates.includes(new Date(date).getTime())\r\n        );\r\n\r\n        return !isFound\r\n    }\r\n\r\n    const handleSelect = (e) => {\r\n        const checked = e.target.checked\r\n        const value = e.target.value\r\n        setSelectedRooms(checked ? [...selectedRooms, value] : selectedRooms.filter(item => item !== value));\r\n    };\r\n    const handleClick = async () => {\r\n\r\n    }\r\n    return (\r\n        <div className=\"reserve\">\r\n            <div className=\"rContainer\">\r\n                <FontAwesomeIcon icon={faCircleXmark} className=\"rClose\" onClick={() => setOpen(false)} />\r\n                <span>Select your Rooms:</span>\r\n                {data.map(item => (\r\n                    <div className=\"rItem\">\r\n                        <div className=\"rItemInfo\">\r\n                            <div className=\"rTitle\">{item.title}</div>\r\n                            <div className=\"rDesc\">{item.desc}</div>\r\n                            <div className=\"rMax\">Max People: <b>{item.maxPeople}</b></div>\r\n                            <div className=\"rPrice\">{item.price}</div>\r\n                        </div>\r\n                        <div className=\"rSelectRooms\">\r\n                            {item.roomNumbers.map(roomNumber => (\r\n                                <div className=\"room\">\r\n                                    <label>{roomNumber.number}</label>\r\n                                    <input type=\"checkbox\" value={roomNumber._id} onChange={handleSelect} disabled={!isAvailable(roomNumber)} />\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n                <button onClick={handleClick} className=\"rButton\">Reserve Now!</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Reserve\r\n"]},"metadata":{},"sourceType":"module"}