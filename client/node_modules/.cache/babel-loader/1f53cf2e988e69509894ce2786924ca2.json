{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Santhosh CV\\\\Downloads\\\\BookingApp\\\\client\\\\src\\\\components\\\\reserve\\\\Reserve.jsx\",\n    _s = $RefreshSig$();\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport \"./reserve.css\";\nimport { faCircleXmark } from \"@fortawesome/free-solid-svg-icons\";\nimport useFetch from \"../../hooks/useFetch\";\nimport { useContext, useState } from \"react\";\nimport { SearchContext } from \"../../context/SearchContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Reserve = _ref => {\n  _s();\n\n  let {\n    setOpen,\n    hotelId\n  } = _ref;\n  const [selectedRooms, setSelectedRooms] = useState([]);\n  const {\n    data,\n    loading,\n    error\n  } = useFetch(`room/${hotelId}`);\n  const {\n    dates\n  } = useContext(SearchContext);\n\n  const getDatesInRange = (startDate, endDate) => {\n    const start = new Date(startDate);\n    const end = new Date(endDate);\n    const date = new Date(start).getTime();\n    let list = [];\n\n    while (date <= end) {\n      list.push(new Date(date));\n      date.setDate(date.getDate() + 1);\n    }\n\n    return list;\n  };\n\n  console.log(getDatesInRange());\n\n  const handleSelect = e => {\n    const checked = e.target.checked;\n    const value = e.target.value;\n    setSelectedRooms(checked ? [...selectedRooms, value] : selectedRooms.filter(item => item !== value));\n  };\n\n  const handleClick = () => {};\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"reserve\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rContainer\",\n      children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faCircleXmark,\n        className: \"rClose\",\n        onClick: () => setOpen(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Select your Rooms:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), data.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rItem\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"rItemInfo\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"rTitle\",\n            children: item.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"rDesc\",\n            children: item.desc\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"rMax\",\n            children: [\"Max People: \", /*#__PURE__*/_jsxDEV(\"b\", {\n              children: item.maxPeople\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 55\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"rPrice\",\n            children: item.price\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }, this), item.roomNumbers.map(roomNumber => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"room\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: roomNumber.number\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            value: roomNumber._id,\n            onChange: handleSelect\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleClick,\n        className: \"rButton\",\n        children: \"Reserve Now!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Reserve, \"sgGmFRi2+y9gipjvFpOK0FbzQf8=\", false, function () {\n  return [useFetch];\n});\n\n_c = Reserve;\nexport default Reserve;\n\nvar _c;\n\n$RefreshReg$(_c, \"Reserve\");","map":{"version":3,"sources":["C:/Users/Santhosh CV/Downloads/BookingApp/client/src/components/reserve/Reserve.jsx"],"names":["FontAwesomeIcon","faCircleXmark","useFetch","useContext","useState","SearchContext","Reserve","setOpen","hotelId","selectedRooms","setSelectedRooms","data","loading","error","dates","getDatesInRange","startDate","endDate","start","Date","end","date","getTime","list","push","setDate","getDate","console","log","handleSelect","e","checked","target","value","filter","item","handleClick","map","title","desc","maxPeople","price","roomNumbers","roomNumber","number","_id"],"mappings":"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","sourcesContent":["import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport \"./reserve.css\"\r\nimport { faCircleXmark } from \"@fortawesome/free-solid-svg-icons\"\r\nimport useFetch from \"../../hooks/useFetch\"\r\nimport { useContext, useState } from \"react\"\r\nimport { SearchContext } from \"../../context/SearchContext\"\r\n\r\nconst Reserve = ({setOpen, hotelId}) => {\r\n  const [selectedRooms, setSelectedRooms] = useState([])\r\n  const { data, loading, error } = useFetch(`room/${hotelId}`) \r\n  const { dates } = useContext(SearchContext);\r\n  \r\n  const getDatesInRange = (startDate,endDate)=>{\r\n    const start = new Date(startDate)\r\n    const end = new Date(endDate)\r\n    const date = new Date(start).getTime();\r\n\r\n    let list = []\r\n    \r\n    while(date <= end){\r\n        list.push(new Date(date))\r\n        date.setDate(date.getDate()+1)\r\n    }\r\n\r\n    return list\r\n  };\r\n\r\n  console.log(getDatesInRange())\r\n\r\n  const handleSelect = (e)=>{\r\n    const checked = e.target.checked\r\n    const value = e.target.value\r\n    setSelectedRooms(checked ? [...selectedRooms, value] : selectedRooms.filter(item=>item !== value));\r\n  };\r\n  const handleClick = ()=>{\r\n\r\n  }\r\n  return (\r\n    <div className=\"reserve\">\r\n      <div className=\"rContainer\">\r\n        <FontAwesomeIcon icon={faCircleXmark} className=\"rClose\" onClick={()=>setOpen(false)}/>\r\n        <span>Select your Rooms:</span>\r\n        {data.map(item=>(\r\n            <div className=\"rItem\">\r\n                <div className=\"rItemInfo\">\r\n                    <div className=\"rTitle\">{item.title}</div>\r\n                    <div className=\"rDesc\">{item.desc}</div>\r\n                    <div className=\"rMax\">Max People: <b>{item.maxPeople}</b></div>\r\n                    <div className=\"rPrice\">{item.price}</div>\r\n                </div>\r\n                    {item.roomNumbers.map(roomNumber=>(\r\n                <div className=\"room\">\r\n                        <label>{roomNumber.number}</label>\r\n                        <input type=\"checkbox\" value={roomNumber._id} onChange={handleSelect} />\r\n                </div>\r\n                ))}\r\n            </div>\r\n        ))}\r\n        <button onClick={handleClick} className=\"rButton\">Reserve Now!</button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Reserve\r\n"]},"metadata":{},"sourceType":"module"}